%!PS-Adobe-3.0
%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
%%+ font Symbol
%%DocumentMedia: special 216 216 0 () ()
%%Title: R Graphics Output
%%Creator: R Software
%%Pages: (atend)
%%BoundingBox: 0 0 216 216
%%EndComments
%%BeginProlog
/bp  { gs gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l  { rlineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 4 2 roll moveto 1 copy 3 -1 roll exch 0 exch rlineto 0 rlineto -1 mul 0 exch rlineto closepath } def
/p1  { stroke } def
/p2  { gsave bg fill grestore newpath } def
/p3  { gsave bg fill grestore stroke } def
/p6  { gsave bg eofill grestore newpath } def
/p7  { gsave bg eofill grestore stroke } def
/t   { 5 -2 roll moveto gsave rotate
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/ta  { 4 -2 roll moveto gsave rotate show } def
/tb  { 2 -1 roll 0 rmoveto show } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
% end   .ps.prolog
%%IncludeResource: font Helvetica
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
%%IncludeResource: font Helvetica-Oblique
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
%%IncludeResource: font Helvetica-BoldOblique
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
%%IncludeResource: font Symbol
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
%%EndProlog
%%Page: 1 1
bp
0.00 0.00 216.00 216.00 cl
/Font2 findfont 14 s
0 setgray
122.40 181.45 (Histogram of rnorm\(10000\)) .5 0 t
/Font1 findfont 12 s
122.40 18.72 (rnorm\(10000\)) .5 0 t
12.96 115.20 (Frequency) .5 90 t
0.00 0.00 216.00 216.00 cl
0 setgray
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
70.64 73.44 m
110.43 0 l
o
np
70.64 73.44 m
0 -7.20 l
o
np
98.24 73.44 m
0 -7.20 l
o
np
125.85 73.44 m
0 -7.20 l
o
np
153.46 73.44 m
0 -7.20 l
o
np
181.07 73.44 m
0 -7.20 l
o
/Font1 findfont 12 s
70.64 47.52 (-4) .5 0 t
98.24 47.52 (-2) .5 0 t
125.85 47.52 (0) .5 0 t
153.46 47.52 (2) .5 0 t
181.07 47.52 (4) .5 0 t
np
59.04 76.53 m
0 79.77 l
o
np
59.04 76.53 m
-7.20 0 l
o
np
59.04 96.47 m
-7.20 0 l
o
np
59.04 116.42 m
-7.20 0 l
o
np
59.04 136.36 m
-7.20 0 l
o
np
59.04 156.30 m
-7.20 0 l
o
41.76 76.53 (0) .5 90 t
41.76 116.42 (1000) .5 90 t
41.76 156.30 (2000) .5 90 t
59.04 73.44 185.76 156.96 cl
0 setgray
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
63.73 76.53 6.90 0.04 r p1
70.64 76.53 6.90 0.12 r p1
77.54 76.53 6.90 0.28 r p1
84.44 76.53 6.90 1.40 r p1
91.34 76.53 6.90 6.14 r p1
98.24 76.53 6.90 17.79 r p1
105.15 76.53 6.90 35.74 r p1
112.05 76.53 6.90 60.86 r p1
118.95 76.53 6.90 75.38 r p1
125.85 76.53 6.90 77.33 r p1
132.75 76.53 6.90 62.18 r p1
139.65 76.53 6.90 34.54 r p1
146.56 76.53 6.90 16.99 r p1
153.46 76.53 6.90 6.74 r p1
160.36 76.53 6.90 2.63 r p1
167.26 76.53 6.90 0.60 r p1
174.16 76.53 6.90 0.08 r p1
ep
%%Trailer
%%Pages: 1
%%EOF
